server:
  log_level: info

metrics:
  wal_directory: '/home/carbonara/lib/grafana-agent'
  global:
    scrape_interval: 30s
    external_labels:
      hostname: '${HOSTNAME}'
      provider: '${AUTH_UNAME}'
      infrastructure_type: '${INFRA_TYPE}'
    remote_write:
      # Monitor-Service endpoint and port. Shared by Carbonara
      - url: https://${REMOTE_ENDPOINT}/api/v1/write
        basic_auth:
          # Basic auth username. Shared by Carbonara
          username: ${AUTH_UNAME}
          # Basic auth password. Shared by Carbonara
          password: ${AUTH_PWD}
        headers:
          tenant_id: ${AUTH_UNAME}
        queue_config:
          # Number of samples to buffer per shard before the client starts dropping them
          capacity: 10000
          # Maximum number of concurrent shards sending samples to the endpoint
          max_shards: 10
          # Minimum amount of concurrent shards sending samples to the endpoint
          min_shards: 1
          # Maximum number of samples per send
          max_samples_per_send: 500
          # Initial retry delay. The backoff time gets doubled for each retry
          min_backoff: 1s
          # Maximum retry delay
          max_backoff: 15s
  configs:
    - name: node-agent
      scrape_configs:
        - job_name: 'node-exporter'
          metrics_path: /metrics
          honor_labels: true
          honor_timestamps: false
          static_configs:
            # node_exporter localhost port
            - targets: ['localhost:${NODE_PORT}']
              labels:
                instance: '${INSTANCE}:${NODE_PORT}'
    - name: ipmi-agent
      scrape_configs:
        - job_name: 'ipmi-exporter'
          metrics_path: /metrics
          honor_labels: true
          honor_timestamps: false
          static_configs:
            # ipmi_exporter localhost port
            - targets: ['localhost:${IPMI_PORT}']
              labels:
                instance: '${INSTANCE}:${IPMI_PORT}'
    - name: gpu-dcgm-agent
      scrape_configs:
        - job_name: 'dcgm-exporter'
          metrics_path: /metrics
          honor_labels: true
          honor_timestamps: false
          static_configs:
            # ipmi_exporter localhost port
            - targets: ['localhost:${DCGM_PORT}']
              labels:
                instance: '${INSTANCE}:${DCGM_PORT}'
    - name: gpu-smi-agent
      scrape_configs:
        - job_name: 'smi-gpu-exporter'
          metrics_path: /metrics
          honor_labels: true
          honor_timestamps: false
          static_configs:
            # ipmi_exporter localhost port
            - targets: ['localhost:${SMI_PORT}']
              labels:
                instance: '${INSTANCE}:${SMI_PORT}'

integrations:
  agent:
    enabled: true
